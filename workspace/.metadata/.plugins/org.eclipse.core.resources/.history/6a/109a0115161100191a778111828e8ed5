/*
 * Template Nintendo DS
 * May 2011
 */

#include "fatherload_defines.h"
#include "graphics_main.h"
#include "P_Audio.h"
#include "graphics_sub.h"
#include "game.h"

int main(void){
	srand(time(NULL));

	init_game();

	u16 keys;

	do{
		// set the player and screen starting coordinates
		start_game();

		while(1){
			scanKeys();
			touchPosition touch;
			keys = keysHeld();

			switch(keys){
			case KEY_DOWN:
				player_move_down();
				break;
			case KEY_UP:
				player_move_up();
				break;
			case KEY_RIGHT:
				player_move_right();
				break;
			case KEY_LEFT:
				player_move_left();
				break;

			case KEY_START:
				player_pressed_start();
				break;
			}
			if(!start_pressed){
				if(keys & KEY_TOUCH){
					player_pressed_touchscreen();
				}

				swiWaitForVBlank();
				REG_BG3HOFS = screen_x;
				REG_BG3VOFS = screen_y;
				REG_BG2HOFS = screen_x;
				REG_BG2VOFS = screen_y;
				//printf("REG_BG2HOFS: %d, screen_x: %d, REG_BG2VOFS: %d, y: %d\n",REG_BG2HOFS, screen_x, REG_BG2VOFS, screen_y);

				switch(orientation){
				case RIGHT:
					oamSet(&oamMain, 	// oam handler
						PLAYER_SPRITE_ID,				// Number of sprite
						player_x, player_y,			// Coordinates
						0,				// Priority
						0,				// Palette to use
						SpriteSize_16x16,			// Sprite size
						SpriteColorFormat_16Color,	// Color format
						gfx_horizontal,			// Loaded graphic to display
						-1,				// Affine rotation to use (-1 none)
						false,			// Double size if rotating
						false,			// Hide this sprite
						false, false,	// Horizontal or vertical flip
						false			// Mosaic
						);
					break;
				case LEFT:
					oamSet(&oamMain, 	// oam handler
						PLAYER_SPRITE_ID,				// Number of sprite
						player_x, player_y,			// Coordinates
						0,				// Priority
						0,				// Palette to use
						SpriteSize_16x16,			// Sprite size
						SpriteColorFormat_16Color,	// Color format
						gfx_horizontal,			// Loaded graphic to display
						-1,				// Affine rotation to use (-1 none)
						false,			// Double size if rotating
						false,			// Hide this sprite
						true, false,	// Horizontal or vertical flip
						false			// Mosaic
						);
					break;
				case UP:
					oamSet(&oamMain, 	// oam handler
						PLAYER_SPRITE_ID,				// Number of sprite
						player_x, player_y,			// Coordinates
						0,				// Priority
						1,				// Palette to use
						SpriteSize_16x16,			// Sprite size
						SpriteColorFormat_16Color,	// Color format
						gfx_vertical,			// Loaded graphic to display
						-1,				// Affine rotation to use (-1 none)
						false,			// Double size if rotating
						false,			// Hide this sprite
						false, false,	// Horizontal or vertical flip
						false			// Mosaic
						);
					break;
				case DOWN:
					oamSet(&oamMain, 	// oam handler
						PLAYER_SPRITE_ID,				// Number of sprite
						player_x, player_y,			// Coordinates
						0,				// Priority
						1,				// Palette to use
						SpriteSize_16x16,			// Sprite size
						SpriteColorFormat_16Color,	// Color format
						gfx_vertical,			// Loaded graphic to display
						-1,				// Affine rotation to use (-1 none)
						false,			// Double size if rotating
						false,			// Hide this sprite
						false, true,	// Horizontal or vertical flip
						false			// Mosaic
						);
					break;
				}

				update_state();
				swiWaitForVBlank();
				oamUpdate(&oamMain);
				updateChronoDisp(min, sec, msec);
				if(mineral_count == MINERAL_NUMBER)
					break;
			}
		}
	} while(1);
	return 0;
}
