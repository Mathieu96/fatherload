/*
 * Template Nintendo DS
 * May 2011
 */

#include "fatherload_defines.h"
#include "graphics_main.h"
#include "P_Audio.h"
#include "graphics_sub.h"
#include "game.h"

int main(void){
	srand(time(NULL));

	init_game();

	u16 keys;

	do{
		// set the player and screen starting coordinates
		start_game();

		while(1){
			scanKeys();
			touchPosition touch;
			keys = keysHeld();

			switch(keys){
			case KEY_DOWN:
				if(screen_y < 512 - 192 && !start_pressed){
					Audio_PlaySoundEX(SFX_BULLDOZER);
					orientation = DOWN;
					screen_y ++;
					if(player_y < 168)
						player_y++;
				}
				break;
			case KEY_UP:
				if(screen_y > 0  && !start_pressed){
					Audio_PlaySoundEX(SFX_BULLDOZER);
					orientation = UP;
					screen_y --;
					if(player_y > 112)
						player_y--;
				}
				break;
			case KEY_RIGHT:
				if(screen_x < 512 - 256  && !start_pressed){
					Audio_PlaySoundEX(SFX_BULLDOZER);
					orientation = RIGHT;
					screen_x++;
					if(player_x < 256-16)
						player_x++;
				}
				break;
			case KEY_LEFT:
				if(screen_x > 0  && !start_pressed){
					Audio_PlaySoundEX(SFX_BULLDOZER);
					orientation = LEFT;
					screen_x--;
					if(player_x > 0)
						player_x--;
				}
				break;

			case KEY_START:
				if(!start_pressed && !start_pressed){
					irqDisable(IRQ_TIMER0);
					mmPause();
					Audio_PlaySoundEX(SFX_TIRE_SCREECH);
					load_start_display();
					start_pressed = 1;
					oamSet(&oamMain, 	// oam handler
						PLAYER_SPRITE_ID,				// Number of sprite
						player_x, player_y,			// Coordinates
						0,				// Priority
						0,				// Palette to use
						SpriteSize_16x16,			// Sprite size
						SpriteColorFormat_16Color,	// Color format
						gfx_horizontal,			// Loaded graphic to display
						-1,				// Affine rotation to use (-1 none)
						false,			// Double size if rotating
						true,			// Hide this sprite
						false, false,	// Horizontal or vertical flip
						false			// Mosaic
					);
					oamUpdate(&oamMain);
					swiDelay(15000000); // Delay to avoid going back out of start mode right after
				}
				else{
					mmResume();
					oamSet(&oamMain, 	// oam handler
						PLAYER_SPRITE_ID,				// Number of sprite
						player_x, player_y,			// Coordinates
						0,				// Priority
						0,				// Palette to use
						SpriteSize_16x16,			// Sprite size
						SpriteColorFormat_16Color,	// Color format
						gfx_horizontal,			// Loaded graphic to display
						-1,				// Affine rotation to use (-1 none)
						false,			// Double size if rotating
						false,			// Hide this sprite
						false, false,	// Horizontal or vertical flip
						false			// Mosaic
					);
					oamUpdate(&oamMain);
					release_start_display();
					start_pressed = 0;
					swiDelay(15000000); // Delay to avoid going back into start mode right after
					irqEnable(IRQ_TIMER0);
				}
			}
			if(!start_pressed){
				if(keys & KEY_TOUCH){
					touchRead(&touch);
					if(((touch.py >= 0) && (touch.py < 50)) && (touch.px >= 45) && (touch.px <= 85)){
						if(screen_y > 0){
							Audio_PlaySoundEX(SFX_BULLDOZER);
							orientation = UP;
							screen_y -=3;
							if(player_y > 112)
								player_y--;
						}
					}
					if(((touch.py >= 75) && (touch.py <= 128)) && (touch.px >= 45) && (touch.px <= 85)){
						if(screen_y < 512 - 192){
							Audio_PlaySoundEX(SFX_BULLDOZER);
							orientation = DOWN;
							screen_y +=3;
							if(player_y < 168)
								player_y++;
						}
					}
					if(((touch.py >= 30) && (touch.py < 90)) && (touch.px >= 2) && (touch.px <= 37)){
						if(screen_x > 0){
							Audio_PlaySoundEX(SFX_BULLDOZER);
							orientation = LEFT;
							screen_x--;
							if(player_x > 0)
								player_x--;
						}
					}
					if(((touch.py >= 30) && (touch.py < 90)) && (touch.px >= 90) && (touch.px <= 128)){
						if(screen_x < 512 - 256){
							Audio_PlaySoundEX(SFX_BULLDOZER);
							orientation = RIGHT;
							screen_x++;
							if(player_x < 256-16)
								player_x++;
						}
					}
				}

				swiWaitForVBlank();
				REG_BG3HOFS = screen_x;
				REG_BG3VOFS = screen_y;
				REG_BG2HOFS = screen_x;
				REG_BG2VOFS = screen_y;
				//printf("REG_BG2HOFS: %d, screen_x: %d, REG_BG2VOFS: %d, y: %d\n",REG_BG2HOFS, screen_x, REG_BG2VOFS, screen_y);

				switch(orientation){
				case RIGHT:
					oamSet(&oamMain, 	// oam handler
						PLAYER_SPRITE_ID,				// Number of sprite
						player_x, player_y,			// Coordinates
						0,				// Priority
						0,				// Palette to use
						SpriteSize_16x16,			// Sprite size
						SpriteColorFormat_16Color,	// Color format
						gfx_horizontal,			// Loaded graphic to display
						-1,				// Affine rotation to use (-1 none)
						false,			// Double size if rotating
						false,			// Hide this sprite
						false, false,	// Horizontal or vertical flip
						false			// Mosaic
						);
					break;
				case LEFT:
					oamSet(&oamMain, 	// oam handler
						PLAYER_SPRITE_ID,				// Number of sprite
						player_x, player_y,			// Coordinates
						0,				// Priority
						0,				// Palette to use
						SpriteSize_16x16,			// Sprite size
						SpriteColorFormat_16Color,	// Color format
						gfx_horizontal,			// Loaded graphic to display
						-1,				// Affine rotation to use (-1 none)
						false,			// Double size if rotating
						false,			// Hide this sprite
						true, false,	// Horizontal or vertical flip
						false			// Mosaic
						);
					break;
				case UP:
					oamSet(&oamMain, 	// oam handler
						PLAYER_SPRITE_ID,				// Number of sprite
						player_x, player_y,			// Coordinates
						0,				// Priority
						1,				// Palette to use
						SpriteSize_16x16,			// Sprite size
						SpriteColorFormat_16Color,	// Color format
						gfx_vertical,			// Loaded graphic to display
						-1,				// Affine rotation to use (-1 none)
						false,			// Double size if rotating
						false,			// Hide this sprite
						false, false,	// Horizontal or vertical flip
						false			// Mosaic
						);
					break;
				case DOWN:
					oamSet(&oamMain, 	// oam handler
						PLAYER_SPRITE_ID,				// Number of sprite
						player_x, player_y,			// Coordinates
						0,				// Priority
						1,				// Palette to use
						SpriteSize_16x16,			// Sprite size
						SpriteColorFormat_16Color,	// Color format
						gfx_vertical,			// Loaded graphic to display
						-1,				// Affine rotation to use (-1 none)
						false,			// Double size if rotating
						false,			// Hide this sprite
						false, true,	// Horizontal or vertical flip
						false			// Mosaic
						);
					break;
				}

				update_state();
				swiWaitForVBlank();
				oamUpdate(&oamMain);
				updateChronoDisp(min, sec, msec);
				if(mineral_count == MINERAL_NUMBER)
					break;
			}
		}
	} while(1);
	return 0;
}
